/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.uth.sbmi.swrldemo;

import edu.uth.sbmi.swrl.ico.Main;
import edu.uth.sbmi.swrl.ico.UseCaseOne;
import java.awt.Color;
import java.awt.FileDialog;
import java.io.File;
import java.util.List;
import org.apache.commons.lang3.tuple.MutablePair;
import org.netbeans.api.io.IOProvider;
import org.netbeans.api.io.InputOutput;
import org.netbeans.api.io.OutputColor;
import org.netbeans.api.io.OutputWriter;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.filesystems.FileChooserBuilder;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.*;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//edu.uth.sbmi.swrldemo//UC1//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "UC1TopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "editor", openAtStartup = true)
@ActionID(category = "Window", id = "edu.uth.sbmi.swrldemo.UC1TopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_UC1Action",
        preferredID = "UC1TopComponent"
)
@Messages({
    "CTL_UC1Action=UC1",
    "CTL_UC1TopComponent=Use Case 1 Window",
    "HINT_UC1TopComponent=This is a UC1 window"
})
public final class UC1TopComponent extends TopComponent {
    
    private UseCaseOne u1 = null;

    public UC1TopComponent() {
        initComponents();
        setName(Bundle.CTL_UC1TopComponent());
        setToolTipText(Bundle.HINT_UC1TopComponent());
        putClientProperty(TopComponent.PROP_CLOSING_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_DRAGGING_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_UNDOCKING_DISABLED, Boolean.TRUE);

        lblInstance.setVisible(false);
        lblAgreement.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        btnInstance = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnAgree = new javax.swing.JButton();
        lblAgreement = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnReason = new javax.swing.JButton();
        lblInstance = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtUseCaseOneModel = new javax.swing.JTextField();
        btnOpenFile = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(UC1TopComponent.class, "UC1TopComponent.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(btnInstance, org.openide.util.NbBundle.getMessage(UC1TopComponent.class, "UC1TopComponent.btnInstance.text")); // NOI18N
        btnInstance.setName("btnInstance"); // NOI18N
        btnInstance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInstanceActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(UC1TopComponent.class, "UC1TopComponent.jLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(btnAgree, org.openide.util.NbBundle.getMessage(UC1TopComponent.class, "UC1TopComponent.btnAgree.text")); // NOI18N
        btnAgree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgreeActionPerformed(evt);
            }
        });

        lblAgreement.setFont(new java.awt.Font("Helvetica Neue", 2, 13)); // NOI18N
        lblAgreement.setForeground(new java.awt.Color(0, 153, 102));
        org.openide.awt.Mnemonics.setLocalizedText(lblAgreement, org.openide.util.NbBundle.getMessage(UC1TopComponent.class, "UC1TopComponent.lblAgreement.text")); // NOI18N

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(UC1TopComponent.class, "UC1TopComponent.jLabel5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(btnReason, org.openide.util.NbBundle.getMessage(UC1TopComponent.class, "UC1TopComponent.btnReason.text")); // NOI18N
        btnReason.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReasonActionPerformed(evt);
            }
        });

        lblInstance.setForeground(new java.awt.Color(0, 153, 102));
        org.openide.awt.Mnemonics.setLocalizedText(lblInstance, org.openide.util.NbBundle.getMessage(UC1TopComponent.class, "UC1TopComponent.lblInstance.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(UC1TopComponent.class, "UC1TopComponent.jLabel4.text")); // NOI18N
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(UC1TopComponent.class, "UC1TopComponent.jLabel1.text")); // NOI18N

        txtUseCaseOneModel.setText(org.openide.util.NbBundle.getMessage(UC1TopComponent.class, "UC1TopComponent.txtUseCaseOneModel.text")); // NOI18N
        txtUseCaseOneModel.setToolTipText(org.openide.util.NbBundle.getMessage(UC1TopComponent.class, "UC1TopComponent.txtUseCaseOneModel.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(btnOpenFile, org.openide.util.NbBundle.getMessage(UC1TopComponent.class, "UC1TopComponent.btnOpenFile.text")); // NOI18N
        btnOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenFileActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(UC1TopComponent.class, "UC1TopComponent.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnInstance)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblInstance))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAgree)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAgreement))
                    .addComponent(jLabel5)
                    .addComponent(btnReason)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnOpenFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUseCaseOneModel, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUseCaseOneModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOpenFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInstance)
                    .addComponent(lblInstance))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgree)
                    .addComponent(lblAgreement))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReason)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(9, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnReasonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReasonActionPerformed
        // TODO add your handling code here:

        InputOutput io = IOProvider.getDefault().getIO("Status", false); 
        io.show();
        
        if(u1 == null){
          u1 = UseCaseOne.getInstance();    
        }
        
        u1.startReasoner();
        
        OutputWriter writer = io.getOut();
        
        writer.println("\n** USE CASE 1 REASONING DEMO **\n");
        
        List<MutablePair<String, String>> whatWasExplained = u1.whatWasExplained();
        
        writer.println("** What was explained to the subject **", OutputColor.rgb(0, 0, 255));
        writer.println("\t" + "Reasoned response: ");
        
        for(MutablePair<String,String> response1: whatWasExplained){
            writer.println("\t\t" + response1.getRight());
        }
        
        List<MutablePair<String, String>> whoExplainedConsentProcess = u1.whoExplainedConsentProcess();
        
        writer.println("** Who explained the above mentioned items to the subject participant? **", OutputColor.rgb(0, 0, 255));
        writer.println("\t" + "Reasoned response: ");
        
        for(MutablePair<String, String> response2: whoExplainedConsentProcess){
            writer.println("\t\t" + response2.getRight() + " ( " + response2.getLeft() +" ) ");
        }
        
        List<MutablePair<String, String>> didParticipantGiveLegalConsent = u1.didParticipantGiveLegalConsent();
        
        writer.println("** Did the participant subject give their consent? **", OutputColor.rgb(0, 0, 255));
        writer.println("\t" + "Reasoned response: ");
        
        for(MutablePair<String, String> response3: didParticipantGiveLegalConsent){
            writer.println("\t\t" + response3.getRight() + " ( " + response3.getLeft()+ " )");
        }
        
        //writer.println("Info message");
        writer.close();
        btnReason.setEnabled(false);
    }//GEN-LAST:event_btnReasonActionPerformed

    private void btnInstanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInstanceActionPerformed
        // TODO add your handling code here:
        
        InputOutput io = IOProvider.getDefault().getIO("Status", false); 
        io.show();
        io.reset();
        OutputWriter writer = io.getOut();
        
        Main m = new Main();
        m.initUseCaseModelFromPath(this.txtUseCaseOneModel.getText());
        //m.initUseCase1Model();
        writer.flush();
        writer.println("Ontology model for USE CASE 1 example added...\n");
        
        if(u1 == null){
            u1 = UseCaseOne.getInstance();
        }
        
        u1.addInformedConsentInstances();
        writer.println("*** INSTANCES ADDED ***", OutputColor.rgb(255, 0, 0));
        //IOColorLines.println(io, "...world", Color.RED);
//writer.println("Under construction");
        writer.close();
        
        lblInstance.setVisible(true);
        this.btnInstance.setEnabled(false);
        //Main m = new Main();
        
    }//GEN-LAST:event_btnInstanceActionPerformed

    private void btnAgreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgreeActionPerformed
        // TODO add your handling code here:
        
        InputOutput io = IOProvider.getDefault().getIO("Status", false);
        io.show();
        OutputWriter writer = io.getOut();
        
        if(u1 == null){
          u1 = UseCaseOne.getInstance();   
        }
        
        u1.insertSubjectConsent();
        writer.println("*** SUBJECT AGREED ****",  OutputColor.rgb(255, 0, 0));
        //writer.println("\t Subject has agreed to the terms (Under construction)");
        //writer.println("\t ");
        
        lblAgreement.setVisible(true);
        writer.close();
        btnAgree.setEnabled(false);
    }//GEN-LAST:event_btnAgreeActionPerformed

    private void btnOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenFileActionPerformed
        // TODO add your handling code here:
        
        
        FileDialog fd = new FileDialog((java.awt.Frame) null, "", FileDialog.LOAD);
        fd.setVisible(true);
        String pathFile = fd.getFile();
        
        if(pathFile != null){
            this.txtUseCaseOneModel.setText(fd.getDirectory()  +pathFile);
        }
        
     
        
    }//GEN-LAST:event_btnOpenFileActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.btnReason.setEnabled(true);
        this.btnAgree.setEnabled(true);
        this.btnInstance.setEnabled(true);
        this.txtUseCaseOneModel.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgree;
    private javax.swing.JButton btnInstance;
    private javax.swing.JButton btnOpenFile;
    private javax.swing.JButton btnReason;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblAgreement;
    private javax.swing.JLabel lblInstance;
    private javax.swing.JTextField txtUseCaseOneModel;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
        
        
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
